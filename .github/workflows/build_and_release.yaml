name: build-and-release
on:
  release:
    types: [published]
  workflow_dispatch:
jobs:
  native_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '22.0.0.2'
          java: 'java11'
          arch: 'amd64'
      - name: Install Native-Image
        run: gu install native-image
      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Login to ACR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
      - name: Build docker image 
        run: mvn spring-boot:build-image
      - name: Push to remote registry
        run: |
          IMAGE_ID=docker images --filter="reference=${{ github.event.repository.name }}" --quiet
          docker tag $IMAGE_ID ${{ secrets.AZURE_CONTAINER_REGISTRY }}/dev/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/dev/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          clusterName: ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }}
          expirationTime: "1200"
      - name: Deploy - Apply manifest
        run: kubectl apply -f ${{ github.workspace }}/kubernetes.yml
      - name: Deploy - Verify deployment
        run: kubectl rollout status deployment/${{ github.event.repository.name }}